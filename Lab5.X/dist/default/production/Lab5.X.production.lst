

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Oct 25 07:09:25 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     008F                     	;# 
    99     0090                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0095                     	;# 
   107     0096                     	;# 
   108     0097                     	;# 
   109     0098                     	;# 
   110     0099                     	;# 
   111     009A                     	;# 
   112     009B                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     0105                     	;# 
   118     0107                     	;# 
   119     0108                     	;# 
   120     0109                     	;# 
   121     010C                     	;# 
   122     010C                     	;# 
   123     010D                     	;# 
   124     010E                     	;# 
   125     010F                     	;# 
   126     0185                     	;# 
   127     0187                     	;# 
   128     0188                     	;# 
   129     0189                     	;# 
   130     018C                     	;# 
   131     018D                     	;# 
   132     0000                     	;# 
   133     0001                     	;# 
   134     0002                     	;# 
   135     0003                     	;# 
   136     0004                     	;# 
   137     0005                     	;# 
   138     0006                     	;# 
   139     0007                     	;# 
   140     0008                     	;# 
   141     0009                     	;# 
   142     000A                     	;# 
   143     000B                     	;# 
   144     000C                     	;# 
   145     000D                     	;# 
   146     000E                     	;# 
   147     000E                     	;# 
   148     000F                     	;# 
   149     0010                     	;# 
   150     0011                     	;# 
   151     0012                     	;# 
   152     0013                     	;# 
   153     0014                     	;# 
   154     0015                     	;# 
   155     0015                     	;# 
   156     0016                     	;# 
   157     0017                     	;# 
   158     0018                     	;# 
   159     0019                     	;# 
   160     001A                     	;# 
   161     001B                     	;# 
   162     001B                     	;# 
   163     001C                     	;# 
   164     001D                     	;# 
   165     001E                     	;# 
   166     001F                     	;# 
   167     0081                     	;# 
   168     0085                     	;# 
   169     0086                     	;# 
   170     0087                     	;# 
   171     0088                     	;# 
   172     0089                     	;# 
   173     008C                     	;# 
   174     008D                     	;# 
   175     008E                     	;# 
   176     008F                     	;# 
   177     0090                     	;# 
   178     0091                     	;# 
   179     0092                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0094                     	;# 
   184     0095                     	;# 
   185     0096                     	;# 
   186     0097                     	;# 
   187     0098                     	;# 
   188     0099                     	;# 
   189     009A                     	;# 
   190     009B                     	;# 
   191     009C                     	;# 
   192     009D                     	;# 
   193     009E                     	;# 
   194     009F                     	;# 
   195     0105                     	;# 
   196     0107                     	;# 
   197     0108                     	;# 
   198     0109                     	;# 
   199     010C                     	;# 
   200     010C                     	;# 
   201     010D                     	;# 
   202     010E                     	;# 
   203     010F                     	;# 
   204     0185                     	;# 
   205     0187                     	;# 
   206     0188                     	;# 
   207     0189                     	;# 
   208     018C                     	;# 
   209     018D                     	;# 
   210     001D                     _CCP2CONbits	set	29
   211     0012                     _T2CONbits	set	18
   212     0017                     _CCP1CONbits	set	23
   213     0006                     _PORTB	set	6
   214     001B                     _CCPR2L	set	27
   215     0015                     _CCPR1L	set	21
   216     001E                     _ADRESH	set	30
   217     001F                     _ADCON0bits	set	31
   218     0092                     _TMR2ON	set	146
   219     0061                     _TMR2IF	set	97
   220     0066                     _ADIF	set	102
   221     009F                     _ADCON1bits	set	159
   222     0085                     _TRISAbits	set	133
   223     0092                     _PR2	set	146
   224     0087                     _TRISCbits	set	135
   225     008F                     _OSCCONbits	set	143
   226     0086                     _TRISB	set	134
   227     0188                     _ANSELbits	set	392
   228     0189                     _ANSELH	set	393
   229                           
   230                           	psect	cinit
   231     07F5                     start_initialization:	
   232                           ; #config settings
   233                           
   234     07F5                     __initialization:
   235                           
   236                           ; Clear objects allocated to COMMON
   237     07F5  01FB               	clrf	__pbssCOMMON& (0+127)
   238     07F6  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   239     07F7  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   240                           
   241                           ; Clear objects allocated to BANK0
   242     07F8  1283               	bcf	3,5	;RP0=0, select bank0
   243     07F9  1303               	bcf	3,6	;RP1=0, select bank0
   244     07FA  01A0               	clrf	__pbssBANK0& (0+127)
   245     07FB  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   246     07FC                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249     07FC                     __end_of__initialization:
   250     07FC  0183               	clrf	3
   251     07FD  120A  118A  2F6B   	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMMON
   254     007B                     __pbssCOMMON:
   255     007B                     _ADC1:
   256     007B                     	ds	2
   257     007D                     _i:
   258     007D                     	ds	1
   259                           
   260                           	psect	bssBANK0
   261     0020                     __pbssBANK0:
   262     0020                     _ADC2:
   263     0020                     	ds	2
   264                           
   265                           	psect	cstackCOMMON
   266     0070                     __pcstackCOMMON:
   267     0070                     ?_setup:
   268     0070                     ??_setup:	
   269                           ; 1 bytes @ 0x0
   270                           
   271     0070                     ?_setupintosc:	
   272                           ; 1 bytes @ 0x0
   273                           
   274     0070                     ??_setupintosc:	
   275                           ; 1 bytes @ 0x0
   276                           
   277     0070                     ?_setupPWM:	
   278                           ; 1 bytes @ 0x0
   279                           
   280     0070                     ??_setupPWM:	
   281                           ; 1 bytes @ 0x0
   282                           
   283     0070                     ?_setupPWM2:	
   284                           ; 1 bytes @ 0x0
   285                           
   286     0070                     ??_setupPWM2:	
   287                           ; 1 bytes @ 0x0
   288                           
   289     0070                     ?_setupADC:	
   290                           ; 1 bytes @ 0x0
   291                           
   292     0070                     ??_setupADC:	
   293                           ; 1 bytes @ 0x0
   294                           
   295     0070                     ?_main:	
   296                           ; 1 bytes @ 0x0
   297                           
   298     0070                     ?___awdiv:	
   299                           ; 1 bytes @ 0x0
   300                           
   301     0070                     ___awdiv@divisor:	
   302                           ; 2 bytes @ 0x0
   303                           
   304                           
   305                           ; 2 bytes @ 0x0
   306     0070                     	ds	2
   307     0072                     ___awdiv@dividend:
   308                           
   309                           ; 2 bytes @ 0x2
   310     0072                     	ds	2
   311     0074                     ??___awdiv:
   312                           
   313                           ; 1 bytes @ 0x4
   314     0074                     	ds	1
   315     0075                     ___awdiv@counter:
   316                           
   317                           ; 1 bytes @ 0x5
   318     0075                     	ds	1
   319     0076                     ___awdiv@sign:
   320                           
   321                           ; 1 bytes @ 0x6
   322     0076                     	ds	1
   323     0077                     ___awdiv@quotient:
   324                           
   325                           ; 2 bytes @ 0x7
   326     0077                     	ds	2
   327     0079                     ??_main:
   328                           
   329                           ; 1 bytes @ 0x9
   330     0079                     	ds	2
   331                           
   332                           	psect	maintext
   333     076B                     __pmaintext:	
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 51 in file "main.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, status,2, status,0, pclath, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : B00/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   353 ;;      Params:         0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0
   355 ;;      Temps:          2       0       0       0       0
   356 ;;      Totals:         2       0       0       0       0
   357 ;;Total ram usage:        2 bytes
   358 ;; Hardware stack levels required when called: 1
   359 ;; This function calls:
   360 ;;		___awdiv
   361 ;;		_setup
   362 ;;		_setupADC
   363 ;;		_setupPWM
   364 ;;		_setupPWM2
   365 ;;		_setupintosc
   366 ;; This function is called by:
   367 ;;		Startup code after reset
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371     076B                     _main:	
   372                           ;psect for function _main
   373                           
   374     076B                     l891:	
   375                           ;incstack = 0
   376                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   377                           
   378                           
   379                           ;main.c: 52:     setup();
   380     076B  120A  118A  26A4  120A  118A  	fcall	_setup
   381     0770                     l893:
   382                           
   383                           ;main.c: 53:     setupintosc();
   384     0770  120A  118A  269C  120A  118A  	fcall	_setupintosc
   385     0775                     l895:
   386                           
   387                           ;main.c: 54:     setupPWM();
   388     0775  120A  118A  26C7  120A  118A  	fcall	_setupPWM
   389     077A                     l897:
   390                           
   391                           ;main.c: 55:     setupPWM2();
   392     077A  120A  118A  26AE  120A  118A  	fcall	_setupPWM2
   393     077F                     l899:
   394                           
   395                           ;main.c: 56:     setupADC();
   396     077F  120A  118A  26E4  120A  118A  	fcall	_setupADC
   397     0784                     l901:
   398                           
   399                           ;main.c: 58:         ADCON0bits.CHS = 0b0000;
   400     0784  30C3               	movlw	-61
   401     0785  1283               	bcf	3,5	;RP0=0, select bank0
   402     0786  1303               	bcf	3,6	;RP1=0, select bank0
   403     0787  059F               	andwf	31,f	;volatile
   404     0788                     l903:
   405                           
   406                           ;main.c: 59:         ADCON0bits.GO = 1;
   407     0788  149F               	bsf	31,1	;volatile
   408     0789                     l62:	
   409                           ;main.c: 60:         while(ADCON0bits.GO == 1){;}
   410                           
   411     0789  189F               	btfsc	31,1	;volatile
   412     078A  2F8C               	goto	u311
   413     078B  2F8D               	goto	u310
   414     078C                     u311:
   415     078C  2F89               	goto	l62
   416     078D                     u310:
   417     078D                     l64:
   418                           
   419                           ;main.c: 61:         ADIF = 0;
   420     078D  130C               	bcf	12,6	;volatile
   421     078E                     l905:
   422                           
   423                           ;main.c: 62:         ADC1 = ADRESH;
   424     078E  081E               	movf	30,w	;volatile
   425     078F  00F9               	movwf	??_main
   426     0790  01FA               	clrf	??_main+1
   427     0791  0879               	movf	??_main,w
   428     0792  00FB               	movwf	_ADC1
   429     0793  087A               	movf	??_main+1,w
   430     0794  00FC               	movwf	_ADC1+1
   431     0795                     l907:
   432                           
   433                           ;main.c: 63:         i = ADC1/16;
   434     0795  3010               	movlw	16
   435     0796  00F0               	movwf	___awdiv@divisor
   436     0797  3000               	movlw	0
   437     0798  00F1               	movwf	___awdiv@divisor+1
   438     0799  087C               	movf	_ADC1+1,w
   439     079A  00F3               	movwf	___awdiv@dividend+1
   440     079B  087B               	movf	_ADC1,w
   441     079C  00F2               	movwf	___awdiv@dividend
   442     079D  120A  118A  2704  120A  118A  	fcall	___awdiv
   443     07A2  0870               	movf	?___awdiv,w
   444     07A3  00FD               	movwf	_i
   445     07A4                     l909:
   446                           
   447                           ;main.c: 64:         if(i > 7 && 16 > i){
   448     07A4  3008               	movlw	8
   449     07A5  027D               	subwf	_i,w
   450     07A6  1C03               	skipc
   451     07A7  2FA9               	goto	u321
   452     07A8  2FAA               	goto	u320
   453     07A9                     u321:
   454     07A9  2FBB               	goto	l915
   455     07AA                     u320:
   456     07AA                     l911:
   457     07AA  3010               	movlw	16
   458     07AB  027D               	subwf	_i,w
   459     07AC  1803               	skipnc
   460     07AD  2FAF               	goto	u331
   461     07AE  2FB0               	goto	u330
   462     07AF                     u331:
   463     07AF  2FBB               	goto	l915
   464     07B0                     u330:
   465     07B0                     l913:
   466                           
   467                           ;main.c: 65:             CCPR1L = i;
   468     07B0  087D               	movf	_i,w
   469     07B1  1283               	bcf	3,5	;RP0=0, select bank0
   470     07B2  1303               	bcf	3,6	;RP1=0, select bank0
   471     07B3  0095               	movwf	21	;volatile
   472                           
   473                           ;main.c: 66:             _delay((unsigned long)((100)*(50000/4000.0)));
   474     07B4  30F9               	movlw	249
   475     07B5  00F9               	movwf	??_main
   476     07B6                     u377:
   477     07B6  2FB7               	nop2
   478     07B7  0BF9               	decfsz	??_main,f
   479     07B8  2FB6               	goto	u377
   480     07B9  2FBA               	nop2
   481     07BA  2FBB               	nop2
   482     07BB                     l915:	
   483                           ;main.c: 67:         }else {i = i;}
   484                           
   485                           
   486                           ;main.c: 68:         ADCON0bits.CHS == 0b0001;
   487     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   488     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   489     07BD  081F               	movf	31,w	;volatile
   490                           
   491                           ;main.c: 69:         ADCON0bits.GO == 1;
   492     07BE  081F               	movf	31,w	;volatile
   493     07BF                     l67:	
   494                           ;main.c: 70:         while(ADCON0bits.GO == 1){;}
   495                           
   496     07BF  189F               	btfsc	31,1	;volatile
   497     07C0  2FC2               	goto	u341
   498     07C1  2FC3               	goto	u340
   499     07C2                     u341:
   500     07C2  2FBF               	goto	l67
   501     07C3                     u340:
   502     07C3                     l69:
   503                           
   504                           ;main.c: 71:         ADIF = 0;
   505     07C3  130C               	bcf	12,6	;volatile
   506     07C4                     l917:
   507                           
   508                           ;main.c: 72:         ADC2 = ADRESH;
   509     07C4  081E               	movf	30,w	;volatile
   510     07C5  00F9               	movwf	??_main
   511     07C6  01FA               	clrf	??_main+1
   512     07C7  0879               	movf	??_main,w
   513     07C8  00A0               	movwf	_ADC2
   514     07C9  087A               	movf	??_main+1,w
   515     07CA  00A1               	movwf	_ADC2+1
   516     07CB                     l919:
   517                           
   518                           ;main.c: 73:         i = ADC2/16;
   519     07CB  3010               	movlw	16
   520     07CC  00F0               	movwf	___awdiv@divisor
   521     07CD  3000               	movlw	0
   522     07CE  00F1               	movwf	___awdiv@divisor+1
   523     07CF  0821               	movf	_ADC2+1,w
   524     07D0  00F3               	movwf	___awdiv@dividend+1
   525     07D1  0820               	movf	_ADC2,w
   526     07D2  00F2               	movwf	___awdiv@dividend
   527     07D3  120A  118A  2704  120A  118A  	fcall	___awdiv
   528     07D8  0870               	movf	?___awdiv,w
   529     07D9  00FD               	movwf	_i
   530     07DA                     l921:
   531                           
   532                           ;main.c: 74:         if(i > 7 && 16 > i){
   533     07DA  3008               	movlw	8
   534     07DB  027D               	subwf	_i,w
   535     07DC  1C03               	skipc
   536     07DD  2FDF               	goto	u351
   537     07DE  2FE0               	goto	u350
   538     07DF                     u351:
   539     07DF  2F84               	goto	l901
   540     07E0                     u350:
   541     07E0                     l923:
   542     07E0  3010               	movlw	16
   543     07E1  027D               	subwf	_i,w
   544     07E2  1803               	skipnc
   545     07E3  2FE5               	goto	u361
   546     07E4  2FE6               	goto	u360
   547     07E5                     u361:
   548     07E5  2F84               	goto	l901
   549     07E6                     u360:
   550     07E6                     l925:
   551                           
   552                           ;main.c: 75:             CCPR2L = i;
   553     07E6  087D               	movf	_i,w
   554     07E7  1283               	bcf	3,5	;RP0=0, select bank0
   555     07E8  1303               	bcf	3,6	;RP1=0, select bank0
   556     07E9  009B               	movwf	27	;volatile
   557                           
   558                           ;main.c: 76:             _delay((unsigned long)((100)*(50000/4000.0)));
   559     07EA  30F9               	movlw	249
   560     07EB  00F9               	movwf	??_main
   561     07EC                     u387:
   562     07EC  2FED               	nop2
   563     07ED  0BF9               	decfsz	??_main,f
   564     07EE  2FEC               	goto	u387
   565     07EF  2FF0               	nop2
   566     07F0  2FF1               	nop2
   567                           
   568                           ;main.c: 77:         }else {i = i;}
   569     07F1  2F84               	goto	l901
   570     07F2  120A  118A  2800   	ljmp	start
   571     07F5                     __end_of_main:
   572                           
   573                           	psect	text1
   574     069C                     __ptext1:	
   575 ;; *************** function _setupintosc *****************
   576 ;; Defined at:
   577 ;;		line 88 in file "main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604     069C                     _setupintosc:	
   605                           ;psect for function _setupintosc
   606                           
   607     069C                     l809:	
   608                           ;incstack = 0
   609                           ; Regs used in _setupintosc: [wreg+status,2+status,0]
   610                           
   611                           
   612                           ;main.c: 89:     OSCCONbits.IRCF = 0b011;
   613     069C  1683               	bsf	3,5	;RP0=1, select bank1
   614     069D  1303               	bcf	3,6	;RP1=0, select bank1
   615     069E  080F               	movf	15,w	;volatile
   616     069F  398F               	andlw	-113
   617     06A0  3830               	iorlw	48
   618     06A1  008F               	movwf	15	;volatile
   619     06A2                     l811:
   620                           
   621                           ;main.c: 90:     OSCCONbits.SCS = 1;
   622     06A2  140F               	bsf	15,0	;volatile
   623     06A3                     l80:
   624     06A3  0008               	return
   625     06A4                     __end_of_setupintosc:
   626                           
   627                           	psect	text2
   628     06AE                     __ptext2:	
   629 ;; *************** function _setupPWM2 *****************
   630 ;; Defined at:
   631 ;;		line 107 in file "main.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, status,2, status,0
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   645 ;;      Params:         0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0
   647 ;;      Temps:          0       0       0       0       0
   648 ;;      Totals:         0       0       0       0       0
   649 ;;Total ram usage:        0 bytes
   650 ;; Hardware stack levels used: 1
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658     06AE                     _setupPWM2:	
   659                           ;psect for function _setupPWM2
   660                           
   661     06AE                     l829:	
   662                           ;incstack = 0
   663                           ; Regs used in _setupPWM2: [wreg+status,2+status,0]
   664                           
   665                           
   666                           ;main.c: 108:     TRISCbits.TRISC3 = 1;
   667     06AE  1683               	bsf	3,5	;RP0=1, select bank1
   668     06AF  1303               	bcf	3,6	;RP1=0, select bank1
   669     06B0  1587               	bsf	7,3	;volatile
   670     06B1                     l831:
   671                           
   672                           ;main.c: 109:     PR2 = 155;
   673     06B1  309B               	movlw	155
   674     06B2  0092               	movwf	18	;volatile
   675     06B3                     l833:
   676                           
   677                           ;main.c: 110:     CCP2CONbits.CCP2M = 0b1111;
   678     06B3  300F               	movlw	15
   679     06B4  1283               	bcf	3,5	;RP0=0, select bank0
   680     06B5  1303               	bcf	3,6	;RP1=0, select bank0
   681     06B6  049D               	iorwf	29,f	;volatile
   682     06B7                     l835:
   683                           
   684                           ;main.c: 111:     CCP2CONbits.DC2B1 = 0b1;
   685     06B7  169D               	bsf	29,5	;volatile
   686     06B8                     l837:
   687                           
   688                           ;main.c: 112:     CCP2CONbits.DC2B0 = 0b1;
   689     06B8  161D               	bsf	29,4	;volatile
   690     06B9                     l839:
   691                           
   692                           ;main.c: 113:     CCPR2L = 11;
   693     06B9  300B               	movlw	11
   694     06BA  009B               	movwf	27	;volatile
   695     06BB                     l841:
   696                           
   697                           ;main.c: 114:     TMR2IF = 0;
   698     06BB  108C               	bcf	12,1	;volatile
   699                           
   700                           ;main.c: 115:     T2CONbits.T2CKPS = 0b11;
   701     06BC  3003               	movlw	3
   702     06BD  0492               	iorwf	18,f	;volatile
   703     06BE                     l843:
   704                           
   705                           ;main.c: 116:     TMR2ON = 1;
   706     06BE  1512               	bsf	18,2	;volatile
   707     06BF                     l89:	
   708                           ;main.c: 117:     while(!TMR2IF);
   709                           
   710     06BF  1C8C               	btfss	12,1	;volatile
   711     06C0  2EC2               	goto	u201
   712     06C1  2EC3               	goto	u200
   713     06C2                     u201:
   714     06C2  2EBF               	goto	l89
   715     06C3                     u200:
   716     06C3                     l91:
   717                           
   718                           ;main.c: 118:     TRISCbits.TRISC3 = 0;
   719     06C3  1683               	bsf	3,5	;RP0=1, select bank1
   720     06C4  1303               	bcf	3,6	;RP1=0, select bank1
   721     06C5  1187               	bcf	7,3	;volatile
   722     06C6                     l92:
   723     06C6  0008               	return
   724     06C7                     __end_of_setupPWM2:
   725                           
   726                           	psect	text3
   727     06C7                     __ptext3:	
   728 ;; *************** function _setupPWM *****************
   729 ;; Defined at:
   730 ;;		line 93 in file "main.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0
   747 ;;      Totals:         0       0       0       0       0
   748 ;;Total ram usage:        0 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757     06C7                     _setupPWM:	
   758                           ;psect for function _setupPWM
   759                           
   760     06C7                     l813:	
   761                           ;incstack = 0
   762                           ; Regs used in _setupPWM: [wreg+status,2+status,0]
   763                           
   764                           
   765                           ;main.c: 94:     TRISCbits.TRISC2 = 1;
   766     06C7  1683               	bsf	3,5	;RP0=1, select bank1
   767     06C8  1303               	bcf	3,6	;RP1=0, select bank1
   768     06C9  1507               	bsf	7,2	;volatile
   769     06CA                     l815:
   770                           
   771                           ;main.c: 95:     PR2 = 155;
   772     06CA  309B               	movlw	155
   773     06CB  0092               	movwf	18	;volatile
   774     06CC                     l817:
   775                           
   776                           ;main.c: 96:     CCP1CONbits.P1M = 0b00;
   777     06CC  303F               	movlw	-193
   778     06CD  1283               	bcf	3,5	;RP0=0, select bank0
   779     06CE  1303               	bcf	3,6	;RP1=0, select bank0
   780     06CF  0597               	andwf	23,f	;volatile
   781     06D0                     l819:
   782                           
   783                           ;main.c: 97:     CCP1CONbits.CCP1M = 0b1100;
   784     06D0  0817               	movf	23,w	;volatile
   785     06D1  39F0               	andlw	-16
   786     06D2  380C               	iorlw	12
   787     06D3  0097               	movwf	23	;volatile
   788     06D4                     l821:
   789                           
   790                           ;main.c: 98:     CCP1CONbits.DC1B = 0b11;
   791     06D4  3030               	movlw	48
   792     06D5  0497               	iorwf	23,f	;volatile
   793     06D6                     l823:
   794                           
   795                           ;main.c: 99:     CCPR1L = 11;
   796     06D6  300B               	movlw	11
   797     06D7  0095               	movwf	21	;volatile
   798     06D8                     l825:
   799                           
   800                           ;main.c: 100:     TMR2IF = 0;
   801     06D8  108C               	bcf	12,1	;volatile
   802                           
   803                           ;main.c: 101:     T2CONbits.T2CKPS = 0b11;
   804     06D9  3003               	movlw	3
   805     06DA  0492               	iorwf	18,f	;volatile
   806     06DB                     l827:
   807                           
   808                           ;main.c: 102:     TMR2ON = 1;
   809     06DB  1512               	bsf	18,2	;volatile
   810     06DC                     l83:	
   811                           ;main.c: 103:     while(!TMR2IF);
   812                           
   813     06DC  1C8C               	btfss	12,1	;volatile
   814     06DD  2EDF               	goto	u191
   815     06DE  2EE0               	goto	u190
   816     06DF                     u191:
   817     06DF  2EDC               	goto	l83
   818     06E0                     u190:
   819     06E0                     l85:
   820                           
   821                           ;main.c: 104:     TRISCbits.TRISC2 = 0;
   822     06E0  1683               	bsf	3,5	;RP0=1, select bank1
   823     06E1  1303               	bcf	3,6	;RP1=0, select bank1
   824     06E2  1107               	bcf	7,2	;volatile
   825     06E3                     l86:
   826     06E3  0008               	return
   827     06E4                     __end_of_setupPWM:
   828                           
   829                           	psect	text4
   830     06E4                     __ptext4:	
   831 ;; *************** function _setupADC *****************
   832 ;; Defined at:
   833 ;;		line 121 in file "main.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;		None
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		None
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   847 ;;      Params:         0       0       0       0       0
   848 ;;      Locals:         0       0       0       0       0
   849 ;;      Temps:          0       0       0       0       0
   850 ;;      Totals:         0       0       0       0       0
   851 ;;Total ram usage:        0 bytes
   852 ;; Hardware stack levels used: 1
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_main
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860     06E4                     _setupADC:	
   861                           ;psect for function _setupADC
   862                           
   863     06E4                     l845:	
   864                           ;incstack = 0
   865                           ; Regs used in _setupADC: []
   866                           
   867                           
   868                           ;main.c: 122:     TRISAbits.TRISA0 = 1;
   869     06E4  1683               	bsf	3,5	;RP0=1, select bank1
   870     06E5  1303               	bcf	3,6	;RP1=0, select bank1
   871     06E6  1405               	bsf	5,0	;volatile
   872                           
   873                           ;main.c: 123:     ANSELbits.ANS1 = 1;
   874     06E7  1683               	bsf	3,5	;RP0=1, select bank3
   875     06E8  1703               	bsf	3,6	;RP1=1, select bank3
   876     06E9  1488               	bsf	8,1	;volatile
   877                           
   878                           ;main.c: 125:     TRISAbits.TRISA1 = 1;
   879     06EA  1683               	bsf	3,5	;RP0=1, select bank1
   880     06EB  1303               	bcf	3,6	;RP1=0, select bank1
   881     06EC  1485               	bsf	5,1	;volatile
   882                           
   883                           ;main.c: 126:     ANSELbits.ANS1 = 1;
   884     06ED  1683               	bsf	3,5	;RP0=1, select bank3
   885     06EE  1703               	bsf	3,6	;RP1=1, select bank3
   886     06EF  1488               	bsf	8,1	;volatile
   887                           
   888                           ;main.c: 128:     TRISAbits.TRISA2 = 1;
   889     06F0  1683               	bsf	3,5	;RP0=1, select bank1
   890     06F1  1303               	bcf	3,6	;RP1=0, select bank1
   891     06F2  1505               	bsf	5,2	;volatile
   892                           
   893                           ;main.c: 129:     ANSELbits.ANS2 = 1;
   894     06F3  1683               	bsf	3,5	;RP0=1, select bank3
   895     06F4  1703               	bsf	3,6	;RP1=1, select bank3
   896     06F5  1508               	bsf	8,2	;volatile
   897                           
   898                           ;main.c: 131:     ADCON0bits.ADCS1 = 0;
   899     06F6  1283               	bcf	3,5	;RP0=0, select bank0
   900     06F7  1303               	bcf	3,6	;RP1=0, select bank0
   901     06F8  139F               	bcf	31,7	;volatile
   902                           
   903                           ;main.c: 132:     ADCON0bits.ADCS0 = 1;
   904     06F9  171F               	bsf	31,6	;volatile
   905                           
   906                           ;main.c: 134:     ADCON1bits.VCFG1 = 0;
   907     06FA  1683               	bsf	3,5	;RP0=1, select bank1
   908     06FB  1303               	bcf	3,6	;RP1=0, select bank1
   909     06FC  129F               	bcf	31,5	;volatile
   910                           
   911                           ;main.c: 135:     ADCON1bits.VCFG0 = 0;
   912     06FD  121F               	bcf	31,4	;volatile
   913                           
   914                           ;main.c: 137:     ADCON1bits.ADFM = 0;
   915     06FE  139F               	bcf	31,7	;volatile
   916                           
   917                           ;main.c: 139:     ADCON0bits.ADON = 1;
   918     06FF  1283               	bcf	3,5	;RP0=0, select bank0
   919     0700  1303               	bcf	3,6	;RP1=0, select bank0
   920     0701  141F               	bsf	31,0	;volatile
   921                           
   922                           ;main.c: 140:     _delay((unsigned long)((100)*(50000/4000000.0)));
   923     0702  0000               	nop
   924     0703                     l95:
   925     0703  0008               	return
   926     0704                     __end_of_setupADC:
   927                           
   928                           	psect	text5
   929     06A4                     __ptext5:	
   930 ;; *************** function _setup *****************
   931 ;; Defined at:
   932 ;;		line 82 in file "main.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		status,2
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   946 ;;      Params:         0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0
   949 ;;      Totals:         0       0       0       0       0
   950 ;;Total ram usage:        0 bytes
   951 ;; Hardware stack levels used: 1
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_main
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959     06A4                     _setup:	
   960                           ;psect for function _setup
   961                           
   962     06A4                     l807:	
   963                           ;incstack = 0
   964                           ; Regs used in _setup: [status,2]
   965                           
   966                           
   967                           ;main.c: 83:     ANSELH = 0;
   968     06A4  1683               	bsf	3,5	;RP0=1, select bank3
   969     06A5  1703               	bsf	3,6	;RP1=1, select bank3
   970     06A6  0189               	clrf	9	;volatile
   971                           
   972                           ;main.c: 84:     TRISB = 0;
   973     06A7  1683               	bsf	3,5	;RP0=1, select bank1
   974     06A8  1303               	bcf	3,6	;RP1=0, select bank1
   975     06A9  0186               	clrf	6	;volatile
   976                           
   977                           ;main.c: 85:     PORTB = 0;
   978     06AA  1283               	bcf	3,5	;RP0=0, select bank0
   979     06AB  1303               	bcf	3,6	;RP1=0, select bank0
   980     06AC  0186               	clrf	6	;volatile
   981     06AD                     l77:
   982     06AD  0008               	return
   983     06AE                     __end_of_setup:
   984                           
   985                           	psect	text6
   986     0704                     __ptext6:	
   987 ;; *************** function ___awdiv *****************
   988 ;; Defined at:
   989 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  divisor         2    0[COMMON] int 
   992 ;;  dividend        2    2[COMMON] int 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  quotient        2    7[COMMON] int 
   995 ;;  sign            1    6[COMMON] unsigned char 
   996 ;;  counter         1    5[COMMON] unsigned char 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  2    0[COMMON] int 
   999 ;; Registers used:
  1000 ;;		wreg, status,2, status,0
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1006 ;;      Params:         4       0       0       0       0
  1007 ;;      Locals:         4       0       0       0       0
  1008 ;;      Temps:          1       0       0       0       0
  1009 ;;      Totals:         9       0       0       0       0
  1010 ;;Total ram usage:        9 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; This function calls:
  1013 ;;		Nothing
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019     0704                     ___awdiv:	
  1020                           ;psect for function ___awdiv
  1021                           
  1022     0704                     l847:	
  1023                           ;incstack = 0
  1024                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1025                           
  1026     0704  01F6               	clrf	___awdiv@sign
  1027     0705                     l849:
  1028     0705  1FF1               	btfss	___awdiv@divisor+1,7
  1029     0706  2F08               	goto	u211
  1030     0707  2F09               	goto	u210
  1031     0708                     u211:
  1032     0708  2F10               	goto	l855
  1033     0709                     u210:
  1034     0709                     l851:
  1035     0709  09F0               	comf	___awdiv@divisor,f
  1036     070A  09F1               	comf	___awdiv@divisor+1,f
  1037     070B  0AF0               	incf	___awdiv@divisor,f
  1038     070C  1903               	skipnz
  1039     070D  0AF1               	incf	___awdiv@divisor+1,f
  1040     070E                     l853:
  1041     070E  01F6               	clrf	___awdiv@sign
  1042     070F  0AF6               	incf	___awdiv@sign,f
  1043     0710                     l855:
  1044     0710  1FF3               	btfss	___awdiv@dividend+1,7
  1045     0711  2F13               	goto	u221
  1046     0712  2F14               	goto	u220
  1047     0713                     u221:
  1048     0713  2F1D               	goto	l861
  1049     0714                     u220:
  1050     0714                     l857:
  1051     0714  09F2               	comf	___awdiv@dividend,f
  1052     0715  09F3               	comf	___awdiv@dividend+1,f
  1053     0716  0AF2               	incf	___awdiv@dividend,f
  1054     0717  1903               	skipnz
  1055     0718  0AF3               	incf	___awdiv@dividend+1,f
  1056     0719                     l859:
  1057     0719  3001               	movlw	1
  1058     071A  00F4               	movwf	??___awdiv
  1059     071B  0874               	movf	??___awdiv,w
  1060     071C  06F6               	xorwf	___awdiv@sign,f
  1061     071D                     l861:
  1062     071D  01F7               	clrf	___awdiv@quotient
  1063     071E  01F8               	clrf	___awdiv@quotient+1
  1064     071F                     l863:
  1065     071F  0870               	movf	___awdiv@divisor,w
  1066     0720  0471               	iorwf	___awdiv@divisor+1,w
  1067     0721  1903               	btfsc	3,2
  1068     0722  2F24               	goto	u231
  1069     0723  2F25               	goto	u230
  1070     0724                     u231:
  1071     0724  2F5C               	goto	l883
  1072     0725                     u230:
  1073     0725                     l865:
  1074     0725  01F5               	clrf	___awdiv@counter
  1075     0726  0AF5               	incf	___awdiv@counter,f
  1076     0727  2F33               	goto	l871
  1077     0728                     l867:
  1078     0728  3001               	movlw	1
  1079     0729                     u245:
  1080     0729  1003               	clrc
  1081     072A  0DF0               	rlf	___awdiv@divisor,f
  1082     072B  0DF1               	rlf	___awdiv@divisor+1,f
  1083     072C  3EFF               	addlw	-1
  1084     072D  1D03               	skipz
  1085     072E  2F29               	goto	u245
  1086     072F                     l869:
  1087     072F  3001               	movlw	1
  1088     0730  00F4               	movwf	??___awdiv
  1089     0731  0874               	movf	??___awdiv,w
  1090     0732  07F5               	addwf	___awdiv@counter,f
  1091     0733                     l871:
  1092     0733  1FF1               	btfss	___awdiv@divisor+1,7
  1093     0734  2F36               	goto	u251
  1094     0735  2F37               	goto	u250
  1095     0736                     u251:
  1096     0736  2F28               	goto	l867
  1097     0737                     u250:
  1098     0737                     l873:
  1099     0737  3001               	movlw	1
  1100     0738                     u265:
  1101     0738  1003               	clrc
  1102     0739  0DF7               	rlf	___awdiv@quotient,f
  1103     073A  0DF8               	rlf	___awdiv@quotient+1,f
  1104     073B  3EFF               	addlw	-1
  1105     073C  1D03               	skipz
  1106     073D  2F38               	goto	u265
  1107     073E  0871               	movf	___awdiv@divisor+1,w
  1108     073F  0273               	subwf	___awdiv@dividend+1,w
  1109     0740  1D03               	skipz
  1110     0741  2F44               	goto	u275
  1111     0742  0870               	movf	___awdiv@divisor,w
  1112     0743  0272               	subwf	___awdiv@dividend,w
  1113     0744                     u275:
  1114     0744  1C03               	skipc
  1115     0745  2F47               	goto	u271
  1116     0746  2F48               	goto	u270
  1117     0747                     u271:
  1118     0747  2F4F               	goto	l879
  1119     0748                     u270:
  1120     0748                     l875:
  1121     0748  0870               	movf	___awdiv@divisor,w
  1122     0749  02F2               	subwf	___awdiv@dividend,f
  1123     074A  0871               	movf	___awdiv@divisor+1,w
  1124     074B  1C03               	skipc
  1125     074C  03F3               	decf	___awdiv@dividend+1,f
  1126     074D  02F3               	subwf	___awdiv@dividend+1,f
  1127     074E                     l877:
  1128     074E  1477               	bsf	___awdiv@quotient,0
  1129     074F                     l879:
  1130     074F  3001               	movlw	1
  1131     0750                     u285:
  1132     0750  1003               	clrc
  1133     0751  0CF1               	rrf	___awdiv@divisor+1,f
  1134     0752  0CF0               	rrf	___awdiv@divisor,f
  1135     0753  3EFF               	addlw	-1
  1136     0754  1D03               	skipz
  1137     0755  2F50               	goto	u285
  1138     0756                     l881:
  1139     0756  3001               	movlw	1
  1140     0757  02F5               	subwf	___awdiv@counter,f
  1141     0758  1D03               	btfss	3,2
  1142     0759  2F5B               	goto	u291
  1143     075A  2F5C               	goto	u290
  1144     075B                     u291:
  1145     075B  2F37               	goto	l873
  1146     075C                     u290:
  1147     075C                     l883:
  1148     075C  0876               	movf	___awdiv@sign,w
  1149     075D  1903               	btfsc	3,2
  1150     075E  2F60               	goto	u301
  1151     075F  2F61               	goto	u300
  1152     0760                     u301:
  1153     0760  2F66               	goto	l887
  1154     0761                     u300:
  1155     0761                     l885:
  1156     0761  09F7               	comf	___awdiv@quotient,f
  1157     0762  09F8               	comf	___awdiv@quotient+1,f
  1158     0763  0AF7               	incf	___awdiv@quotient,f
  1159     0764  1903               	skipnz
  1160     0765  0AF8               	incf	___awdiv@quotient+1,f
  1161     0766                     l887:
  1162     0766  0878               	movf	___awdiv@quotient+1,w
  1163     0767  00F1               	movwf	?___awdiv+1
  1164     0768  0877               	movf	___awdiv@quotient,w
  1165     0769  00F0               	movwf	?___awdiv
  1166     076A                     l334:
  1167     076A  0008               	return
  1168     076B                     __end_of___awdiv:
  1169     007E                     btemp	set	126	;btemp
  1170     007E                     wtemp0	set	126
  1171                           
  1172                           	psect	idloc
  1173                           
  1174                           ;Config register IDLOC0 @ 0x2000
  1175                           ;	unspecified, using default values
  1176     2000                     	org	8192
  1177     2000  3FFF               	dw	16383
  1178                           
  1179                           ;Config register IDLOC1 @ 0x2001
  1180                           ;	unspecified, using default values
  1181     2001                     	org	8193
  1182     2001  3FFF               	dw	16383
  1183                           
  1184                           ;Config register IDLOC2 @ 0x2002
  1185                           ;	unspecified, using default values
  1186     2002                     	org	8194
  1187     2002  3FFF               	dw	16383
  1188                           
  1189                           ;Config register IDLOC3 @ 0x2003
  1190                           ;	unspecified, using default values
  1191     2003                     	org	8195
  1192     2003  3FFF               	dw	16383
  1193                           
  1194                           	psect	config
  1195                           
  1196                           ;Config register CONFIG1 @ 0x2007
  1197                           ;	Oscillator Selection bits
  1198                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1199                           ;	Watchdog Timer Enable bit
  1200                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1201                           ;	Power-up Timer Enable bit
  1202                           ;	PWRTE = OFF, PWRT disabled
  1203                           ;	RE3/MCLR pin function select bit
  1204                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1205                           ;	Code Protection bit
  1206                           ;	CP = OFF, Program memory code protection is disabled
  1207                           ;	Data Code Protection bit
  1208                           ;	CPD = OFF, Data memory code protection is disabled
  1209                           ;	Brown Out Reset Selection bits
  1210                           ;	BOREN = OFF, BOR disabled
  1211                           ;	Internal External Switchover bit
  1212                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1213                           ;	Fail-Safe Clock Monitor Enabled bit
  1214                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1215                           ;	Low Voltage Programming Enable bit
  1216                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1217                           ;	In-Circuit Debugger Mode bit
  1218                           ;	DEBUG = 0x1, unprogramme  1219     2007                     	org	8199
  1220     2007  20D4               	dw	8404
  1221                           
  1222                           ;Config register CONFIG2 @ 0x2008
  1223                           ;	Brown-out Reset Selection bit
  1224                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1225                           ;	Flash Program Memory Self Write Enable bits
  1226                           ;	WRT = OFF, Write protection off
  1227     2008                     	org	8200
  1228     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80      0       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     604
                                              9 COMMON     2     2      0
                            ___awdiv
                              _setup
                           _setupADC
                           _setupPWM
                          _setupPWM2
                        _setupintosc
 ---------------------------------------------------------------------------------
 (1) _setupintosc                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _setup
   _setupADC
   _setupPWM
   _setupPWM2
   _setupintosc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Oct 25 07:09:25 2022

                      _i 007D                       l62 0789                       l80 06A3  
                     l64 078D                       l83 06DC                       l91 06C3  
                     l67 07BF                       l92 06C6                       l77 06AD  
                     l85 06E0                       l69 07C3                       l86 06E3  
                     l95 0703                       l89 06BF             ___awdiv@sign 0076  
                    l334 076A                      l811 06A2                      l821 06D4  
                    l813 06C7                      l901 0784                      l807 06A4  
                    l823 06D6                      l815 06CA                      l831 06B1  
                    l911 07AA                      l903 0788                      l825 06D8  
                    l817 06CC                      l841 06BB                      l833 06B3  
                    l809 069C                      l921 07DA                      l913 07B0  
                    l905 078E                      l851 0709                      l827 06DB  
                    l819 06D0                      l843 06BE                      l835 06B7  
                    l923 07E0                      l915 07BB                      l907 0795  
                    l861 071D                      l853 070E                      l845 06E4  
                    l837 06B8                      l829 06AE                      l925 07E6  
                    l917 07C4                      l909 07A4                      l871 0733  
                    l863 071F                      l855 0710                      l847 0704  
                    l839 06B9                      l919 07CB                      l881 0756  
                    l873 0737                      l865 0725                      l857 0714  
                    l849 0705                      l875 0748                      l867 0728  
                    l883 075C                      l859 0719                      l891 076B  
                    l885 0761                      l877 074E                      l869 072F  
                    l893 0770                      l887 0766                      l879 074F  
                    l895 0775                      l897 077A                      l899 077F  
                    u200 06C3                      u201 06C2                      u210 0709  
                    u211 0708                      u300 0761                      u220 0714  
                    u301 0760                      u221 0713                      u230 0725  
                    u310 078D                      u231 0724                      u311 078C  
                    u320 07AA                      u321 07A9                      u250 0737  
                    u330 07B0                      u251 0736                      u331 07AF  
                    u340 07C3                      u245 0729                      u341 07C2  
                    u270 0748                      u190 06E0                      u350 07E0  
                    _PR2 0092                      u271 0747                      u191 06DF  
                    u351 07DF                      u360 07E6                      u265 0738  
                    u361 07E5                      u290 075C                      u291 075B  
                    u275 0744                      u285 0750                      u377 07B6  
                    u387 07EC                     _ADC1 007B                     _ADC2 0020  
                   _ADIF 0066                     _main 076B                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___awdiv 076B  
        ___awdiv@divisor 0070          ___awdiv@counter 0075                    _PORTB 0006  
                  _TRISB 0086                    _setup 06A4                    status 0003  
                  wtemp0 007E          __initialization 07F5             __end_of_main 07F5  
                 ??_main 0079                   _ADRESH 001E                   _CCPR1L 0015  
                 _CCPR2L 001B         ___awdiv@dividend 0072                   ?_setup 0070  
                 _ANSELH 0189                   _TMR2IF 0061                   _TMR2ON 0092  
              ??___awdiv 0074         ___awdiv@quotient 0077         __end_of_setupADC 0704  
       __end_of_setupPWM 06E4  __end_of__initialization 07FC             ?_setupintosc 0070  
         __pcstackCOMMON 0070            __end_of_setup 06AE                  ??_setup 0070  
             __pbssBANK0 0020               __pmaintext 076B                ?_setupADC 0070  
              ?_setupPWM 0070                  ___awdiv 0704                _ANSELbits 0188  
                __ptext1 069C                  __ptext2 06AE                  __ptext3 06C7  
                __ptext4 06E4                  __ptext5 06A4                  __ptext6 0704  
              _T2CONbits 0012     end_of_initialization 07FC        __end_of_setupPWM2 06C7  
             ??_setupADC 0070               ??_setupPWM 0070                _TRISAbits 0085  
              _TRISCbits 0087              _CCP1CONbits 0017              _CCP2CONbits 001D  
    start_initialization 07F5              __pbssCOMMON 007B                ___latbits 0002  
               ?___awdiv 0070                _setupPWM2 06AE               _ADCON0bits 001F  
             _ADCON1bits 009F            ??_setupintosc 0070               ?_setupPWM2 0070  
               _setupADC 06E4                 _setupPWM 06C7      __end_of_setupintosc 06A4  
             _OSCCONbits 008F              ??_setupPWM2 0070              _setupintosc 069C  
